{"version":3,"sources":["../node_modules/domready/ready.js","index.ts"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,OAAA,CAAS,YAAA;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAEQ,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAS,CAAC,YAAV,CAAuB,YAAvB,CAAoC;AACvD,YAAA,KAAK,EAAE,IADgD;AAEvD,YAAA,KAAK,EAAE;AAFgD,WAApC,CAAN,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AAKA,UAAA,IAAI,GAAG,IAAI,IAAJ,CAAS;AACpB,YAAA,GAAG,wCADiB;AAEpB,YAAA,KAAK,EAAE;AAFa,WAAT,CAAP;AAKN,UAAA,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;AACd,YAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,EAAjB;AACD,WAFD;;;;;;GAZO,CAAA;AAsBR,CAtBD","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","import domready from \"domready\";\n\ndomready(async () => {\n  // カメラ映像取得\n  const stream = await navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true,\n  });\n\n  const peer = new Peer({\n    key: process.env.API_KEY,\n    debug: 3,\n  });\n\n  peer.on(\"open\", () => {\n    console.log(peer.id);\n  });\n\n  // 成功時にvideo要素にカメラ映像をセットし、再生\n  //   const videoElm = document.getElementById(\"my-video\");\n  //   videoElm.srcObject = stream;\n  //   videoElm.play();\n  // 着信時に相手にカメラ映像を返せるように、グローバル変数に保存しておく\n  //   localStream = stream;\n});\n"]}